name: websites

services:
  nix:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: nix
    restart: unless-stopped
    tty: true
    stdin_open: true
    working_dir: /flake
    volumes:
      - ./config:/flake:rw,Z
      - $SSH_AUTH_SOCK:/ssh-agent:ro
      - ~/.ssh/id_ed25519_agenix:/root/.ssh/id_ed25519_agenix:ro
    environment:
      SSH_AUTH_SOCK: /ssh-agent

  vps-bootstrap:
    image: nixos/nix
    container_name: nixos-fts
    working_dir: /flake
    tty: true
    stdin_open: true
    volumes:
      - ./config:/flake:rw,Z
    environment:
      NIX_CONFIG: "experimental-features = nix-command flakes"
    env_file: ".env"
    command: nix run github:nix-community/nixos-anywhere -- --flake .#vps --generate-hardware-config nixos-generate-config ./modules/hardware.nix root@$TARGET_HOST

  vps-build:
    image: nixos/nix
    container_name: nixos-build
    working_dir: /flake
    tty: true
    stdin_open: true
    volumes:
      - ./config:/flake:rw,Z
      - $SSH_AUTH_SOCK:/ssh-agent:ro
    environment:
      NIX_CONFIG: "experimental-features = nix-command flakes"
      SSH_AUTH_SOCK: /ssh-agent
    env_file: ".env"
    command: >
      bash -c "
        echo 'Building system...';
        nix build .#nixosConfigurations.vps.config.system.build.toplevel;
        echo 'Copying Nix store to VPS...';
        nix copy --no-check-sigs --to ssh://$USER@$TARGET_HOST:$PORT ./result;
        echo 'Activating system on VPS...';
        ssh $USER@$TARGET_HOST -p $PORT 'sudo nixos-rebuild switch --flake /etc/nixos#vps'"