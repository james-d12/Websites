on:
  workflow_call:
    inputs:
      site:
        required: true
        type: string
    secrets:
      server_host:
        required: true
      server_username:
        required: true
      server_password:
        required: true
      server_ssh_port:
        required: true

jobs:
  build-site:
    runs-on: ubuntu-latest
    name: Build ${{ inputs.site }}
    env:
      SITE_FULL_PATH: sites/${{ inputs.site }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: ${{ SITE_FULL_PATH }}
        run: pnpm install

      - name: Build project
        working-directory: ${{ SITE_FULL_PATH }}
        run: pnpm build

      - name: Audit Packages
        working-directory: ${{ SITE_FULL_PATH }}
        run: pnpm audit

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-dist-${{ inputs.site }}
          path: ${{ SITE_FULL_PATH }}/dist

  deploy-site:
    runs-on: ubuntu-latest
    name: Deploy ${{ inputs.site }}
    needs: build-site
    env:
      SITE_FULL_PATH: sites/${{ inputs.site }}
    if: needs.build-site.result == 'success' && github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: site-dist-${{ inputs.site }}
          path: ./deploy

      - uses: appleboy/ssh-action@master
        name: Backup previous deployment
        with:
          host: ${{ secrets.server_host }}
          username: ${{ secrets.server_username }}
          password: ${{ secrets.server_password }}
          port: ${{ secrets.server_ssh_port }}
          script: cp -r /var/www/${{ inputs.site }} /var/www/backup/${{ SITE_FULL_PATH }}-$(date +%F%H%M%S)

      - uses: appleboy/scp-action@master
        name: Deploy site via SCP
        with:
          host: ${{ secrets.server_host }}
          username: ${{ secrets.server_username }}
          password: ${{ secrets.server_password }}
          port: ${{ secrets.server_ssh_port }}
          source: "${{ SITE_FULL_PATH }}/dist/*"
          target: "/var/www/${{ inputs.site }}"
          strip_components: 3