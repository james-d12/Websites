name: Deploy

on:
  workflow_run:
    workflows: [ Build ]
    types:
      - completed

jobs:
  deploy:
    if: github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project: sites/jamesdurban.com
            domain: jamesdurban.com
          - project: sites/thecontourclinicrichmond.co.uk
            domain: thecontourclinicrichmond.co.uk

    name: Deploy ${{ matrix.project }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed to compare changes

      - name: Detect changes
        id: changes
        run: |
          if git diff --quiet HEAD^ HEAD -- ${{ matrix.project }}; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Skip if no changes
        if: steps.changes.outputs.changed == 'false'
        run: |
          echo "No changes detected for ${{ matrix.project }}, skipping..."
          exit 0

      - name: Install Node.js
        if: steps.changes.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        if: steps.changes.outputs.changed == 'true'
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        if: steps.changes.outputs.changed == 'true'
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        if: steps.changes.outputs.changed == 'true'
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        if: steps.changes.outputs.changed == 'true'
        working-directory: ${{ matrix.project }}
        run: pnpm install

      - name: Build project
        if: steps.changes.outputs.changed == 'true'
        working-directory: ${{ matrix.project }}
        run: pnpm build

      - uses: appleboy/ssh-action@master
        if: steps.changes.outputs.changed == 'true'
        name: Backup previous deployment
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: cp -r /var/www/${{ matrix.domain }} /var/www/backup/${{ matrix.domain }}-$(date +%F%H%M%S)

      - uses: appleboy/scp-action@master
        if: steps.changes.outputs.changed == 'true'
        name: Deploy site via SCP
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "${{ matrix.project }}/dist/*"
          target: "/var/www/${{ matrix.domain }}"
          strip_components: 3
